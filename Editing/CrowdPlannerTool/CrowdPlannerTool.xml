<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CrowdPlannerTool</name>
    </assembly>
    <members>
        <member name="M:CrowdPlannerTool.CPConstructionTool.OnSketchCompleteAsync(ArcGIS.Core.Geometry.Geometry)">
            <summary>
            Called when the sketch finishes. This is where we will create the sketch operation and then execute it.
            </summary>
            <param name="geometry">The geometry created by the sketch.</param>
            <returns>A Task returning a Boolean indicating if the sketch complete event was successfully handled.</returns>
        </member>
        <member name="T:CrowdPlannerTool.CPDockpaneView">
            <summary>
            Interaction logic for CPDockpaneView.xaml
            </summary>
            <summary>
            CPDockpaneView
            </summary>
        </member>
        <member name="M:CrowdPlannerTool.CPDockpaneView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:CrowdPlannerTool.CPDockpane_ShowButton">
            <summary>
            Button implementation to show the DockPane.
            </summary>
        </member>
        <member name="M:CrowdPlannerTool.CPDockpaneViewModel.Show">
            <summary>
            Show the DockPane
            </summary>
        </member>
        <member name="F:CrowdPlannerTool.CPDockpaneViewModel._totalHigh">
            <summary>
            Text shown near the top of the DockPane.
            </summary>
        </member>
        <member name="T:CrowdPlannerTool.Module1">
            <summary>
            This sample shows the use of a construction tool to implement a crowd planning workflow.
            </summary>
            <remarks>
            1. Download the Community Sample data (see under the 'Resources' section for downloading sample data).  The sample data contains a map package called 'CrowdPlannerProject.ppkx' which is required for this sample.  Make sure that the Sample data is unzipped in c:\data and "C:\Data\CrowdPlanner" is available.
            1. Open this solution in Visual Studio 2015.  
            1. Click the build menu and select Build Solution.
            1. This solution is using the **System.Windows.Controls.DataVisualization.Toolkit Nuget**.  If needed, you can install the Nuget from the "Nuget Package Manager Console" by using this script: "Install-Package System.Windows.Controls.DataVisualization.Toolkit".
            1. Click the Start button to open ArCGIS Pro.  ArcGIS Pro will open.
            1. Open the map package located in the "CrowdPlannerProject.ppkx" in the "C:\Data\CrowdPlanner" folder since this project contains all required data.
            1. Click on the Add-in tab and see that a 'Crowd Planner Summary' button was added.
            1. The 'Crowd Planner Summary' button opens the 'Crowd Planner' pane. 
            ![UI](Screenshots/Screen1.png)
            1. Click the 'Populate Values' button and note that now the pane entry fields have been populated using data from the sample record in the Crowd Planning feature class.
            ![UI](Screenshots/Screen2.png)
            1. Select the 'Edit' tab and create a new 'CrowdPlanning' feature by using the CP construction tool.
            ![UI](Screenshots/Screen3.png)
            1. Digitize a new polygon and note that its attributes are automatically populated. 
            ![UI](Screenshots/Screen4.png)
            1. Finally you can also play with the various value adjustment buttons that are provided on the 'Crowd Planner' pane.
            ![UI](Screenshots/Screen5.png)
            </remarks>
        </member>
        <member name="P:CrowdPlannerTool.Module1.Current">
            <summary>
            Retrieve the singleton instance to this module here
            </summary>
        </member>
        <member name="M:CrowdPlannerTool.Module1.CanUnload">
            <summary>
            Called by Framework when ArcGIS Pro is closing
            </summary>
            <returns>False to prevent Pro from closing, otherwise True</returns>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
